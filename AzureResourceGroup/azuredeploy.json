{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "DnsPrefix": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The external DNS prefix for the solution - will be prefixed to 'cloudapp.net'"
      }
    },
    "Namespace": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The namespace of the solution"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "East US",
      "allowedValues": [
        "West US",
        "East US",
        "West Europe",
        "East Asia",
        "Southeast Asia"
      ],
      "metadata": {
        "description": "The region to deploy the resources into"
      }
    }
  },
  "variables": {
    "adsAvailabilitySetName": "[concat(variables('namePrefix'),'ads')]",
    "elbFEConfigID": "[concat(variables('elbID'),'/frontendIPConfigurations/',variables('elbName'))]",
    "elbID": "[resourceId('Microsoft.Network/loadBalancers',variables('elbName'))]",
    "elbName": "[concat(variables('namePrefix'),'elb')]",
    "ilbName": "[concat(variables('namePrefix'),'ilb')]",
    "ilbIPAddress": "10.0.2.7", 
    "loc": "[tolower(replace(parameters('location'),' ', ''))]",
    "namePrefix": "[concat(parameters('Namespace'), variables('loc'))]",
    "natRDP" : "RDP" ,
    "pipName": "[concat(variables('namePrefix'),'ip')]",
    "portHTTP": "80",
    "portRDP": "3389",
    "portSSL": "443",
    "portUDP": "3391",
    "rdsAvailabilitySetName": "[concat(variables('namePrefix'),'rds')]",
    "rgwAvailabilitySetName": "[concat(variables('namePrefix'),'rgw')]",
    "sqlAvailabilitySetName": "[concat(variables('namePrefix'),'sql')]",
    "storageAccountType": "Standard_LRS",
    "subnetApplication": "Application",
    "subnetData": "Data",
    "subnetFront": "Presentation",
    "subnetManagement": "Management",
    "subnetRangeApplication": "10.0.1.0/24",
    "subnetRangeData": "10.0.2.0/24",
    "subnetRangeFront": "10.0.0.0/24",
    "subnetRangeManagement": "10.0.3.0/24",
    "subnets": [
      {
        "name": "[variables('subnetFront')]",
        "properties": {
          "addressPrefix": "[variables('subnetRangeFront')]"
        }
      },
      {
        "name": "[variables('subnetApplication')]",
        "properties": {
          "addressPrefix": "[variables('subnetRangeApplication')]"
        }
      },
      {
        "name": "[variables('subnetData')]",
        "properties": {
          "addressPrefix": "[variables('subnetRangeData')]"
        }
      },
      {
        "name": "[variables('subnetManagement')]",
        "properties": {
          "addressPrefix": "[variables('subnetRangeManagement')]"
        }
      }
    ],
    "virtualNetworkAddressRange": "10.0.0.0/16",
    "virtualNetworkName": "[concat(variables('namePrefix'),'vnet')]",
    "webAvailabilitySetName": "[concat(variables('namePrefix'),'web')]",
    "subnetDataRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetData'))]",
    "vNetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('namePrefix'), copyindex())]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "copy": {
        "name": "storageAccountLoop",
        "count": 6
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pipName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('DnsPrefix')]"
        }
      }
    },
    {
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('adsAvailabilitySetName')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]"
		},
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('sqlAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "3",
        "platformUpdateDomainCount": "3"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('rdsAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('rgwAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('webAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]"
    },
    {
      "name": "[variables('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('virtualNetworkAddressRange')]"
          ]
        },
        "subnets": "[variables('subnets')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('elbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('elbName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('ilbName')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "[variables('natRDP')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('elbFEConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": "[variables('portRDP')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('ilbName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": ["[variables('vnetID')]"],
            "properties": {
                "frontendIpConfigurations": [{

                    "properties": {
                        "subnet": {
                            "Id": "[variables('subnetDataRef')]"
                        },
                        "privateIPAddress": "[variables('ilbIPAddress')]",
                        "privateIPAllocationMethod": "Static"
                    },
                    "name": "ilbFrontend"
                }],
                "backendAddressPools": [{
                    "name": "SqlBackendPool"
                }],
                "loadBalancingRules": [{
                    "properties": {
                        "frontendIPConfiguration": {
                            "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/frontendIpConfigurations/ilbFrontend')]"
                        },
                        "backendAddressPool": {
                            "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/backendAddressPools/SqlBackendPool')]"
                        },
                        "probe": {
                            "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/probes/sqlProbe')]"
                        },
						            "protocol": "tcp",
						            "frontendPort": 1433,
						            "backendPort": 1433,
						            "enableFloatingIP": true

                    },
                    "Name": "sqlListener"
                }],
                "probes": [{
						        "properties": {
							          "protocol": "tcp",
							          "port": 59999,
							          "intervalInSeconds": "5",
							          "numberOfProbes": "2"
						            },
                    "name": "sqlProbe"
                }]
            }
        }
		],
	"outputs": {
		"exampleOutput": {
			"value": "[variables('namePrefix')]",
			"type" : "string"
		}
	}
}
