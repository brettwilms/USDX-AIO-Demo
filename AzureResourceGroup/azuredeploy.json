{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources that the script is dependent on such as linked templates and DSC modules"
      },
      "defaultValue": "https://raw.githubusercontent.com/brettwilms/USDX-AIO-Demo/master/AzureResourceGroup"
    },
    "AdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "AdminUserName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      },
      "defaultValue": "sqlAdministrator"
    },
    "ExternalDnsPrefix": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The external DNS prefix for the solution - will be prefixed to 'cloudapp.net'"
      }
    },
    "Namespace": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The namespace of the solution"
      }
    },
    "DomainDNS": {
      "type": "string",
      "defaultValue": "[concat(resourceGroup().name, '.com')]",
      "metadata": {
        "description": "The DNS name of the domain to create"
      }
    },
    "DomainNetBIOS": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The NetBIOS name of the domain to create"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },
  },
  "variables": {
    "_vmDiskSize": 127,
    "location": "[resourceGroup().location]",
    "adBDCConfigurationFunction": "CreateADBDC.ps1\\CreateADBDC",
    "adBDCModulesURL": "[concat(parameters('assetLocation'),'/CreateADBDC.ps1.zip')]",
    "adBDCNicIPAddress": "10.0.3.5",
    "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
    "adPDCModulesURL": "[concat(parameters('assetLocation'),'/CreateADPDC.ps1.zip')]",
    "adPDCNicIPAddress": "10.0.3.4",
    "adsAvailabilitySetName": "[concat(variables('namePrefix'),'ads')]",
    "adsVMNamePrefix": "DC",
    "adsVMSize": "Standard_DS2",
    "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster",
    "createClusterModulesURL": "[concat(parameters('assetLocation'),'/CreateFailoverCluster.ps1.zip')]",
    "elbBackendPool1ID": "[concat(variables('elbID'),'/backendAddressPools/BackendPool1')]",
    "elbBackendPool2ID": "[concat(variables('elbID'),'/backendAddressPools/BackendPool2')]",
    "elbBackendPool3ID": "[concat(variables('elbID'),'/backendAddressPools/BackendPool3')]",
    "elbFrontEndIPConfigID": "[concat(variables('elbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "elbID": "[resourceId('Microsoft.Network/loadBalancers',variables('elbName'))]",
    "elbName": "[concat(variables('namePrefix'),'elb')]",
    "elbProbe1ID": "[concat(variables('elbID'),'/probes/tcpProbe1')]",
    "elbProbe2ID": "[concat(variables('elbID'),'/probes/tcpProbe2')]",
    "elbProbe3ID": "[concat(variables('elbID'),'/probes/httpProbe1')]",
    "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
    "fswModulesURL": "[concat(parameters('assetLocation'),'/CreateFileShareWitness.ps1.zip')]",
    "ilbID": "[resourceId('Microsoft.Network/loadBalancers',variables('ilbName'))]",
    "ilbIPAddress": "10.0.2.7",
    "ilbName": "[concat(variables('namePrefix'),'ilb')]",
    "loc": "[tolower(replace(variables('location'),' ', ''))]",
    "namePrefix": "[concat(parameters('Namespace'), variables('loc'))]",
    "natRDP": "Management_RDP",
    "natSSL": "RD_Gateway_SSL",
    "natUDP": "RD_Gateway_UDP",
    "pipID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName'))]",
    "pipName": "[concat(variables('namePrefix'),'ip')]",
    "portHTTP": 80,
    "portRDP": 3389,
    "portSSL": 443,
    "portUDP": 3391,
    "rdgVMCount": 2,
    "rdgVMNamePrefix": "GW",
    "rdgVMSize": "Standard_DS2",
    "rdsAvailabilitySetName": "[concat(variables('namePrefix'),'rds')]",
    "rdsVMCount": 2,
    "rdsVMNamePrefix": "RDS",
    "rdsVMSize": "Standard_DS2",
    "rgwAvailabilitySetName": "[concat(variables('namePrefix'),'rgw')]",
    "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
    "sqlAOPrepareModulesURL": "[concat(parameters('assetLocation'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
    "sqlAvailabilitySetName": "[concat(variables('namePrefix'),'sql')]",
    "sqlVMCount": 2,
    "sqlVMNamePrefix": "SQL",
    "sqlVMSize": "Standard_DS2",
    "witnessVMSize": "Standard_DS1",
    "sharePath": "[concat(variables('namePrefix'),'-fsw')]",
    "sqlDiskSize": 127,
    "sqlImageOffer": "SQL2014-WS2012R2",
    "sqlImagePublisher": "MicrosoftSQLServer",
    "sqlImageSKU": "Enterprise",
    "subnetApplication": "Application",
    "subnetApplicationRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetApplication'))]",
    "subnetData": "Data",
    "subnetDataRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetData'))]",
    "subnetFront": "Presentation",
    "subnetFrontRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetFront'))]",
    "subnetManagement": "Management",
    "subnetManagementRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetManagement'))]",
    "subnetRangeApplication": "10.0.1.0/24",
    "subnetRangeData": "10.0.2.0/24",
    "subnetRangeFront": "10.0.0.0/24",
    "subnetRangeManagement": "10.0.3.0/24",
    "subnets": [
      {
        "name": "[variables('subnetFront')]",
        "properties": {
          "addressPrefix": "[variables('subnetRangeFront')]"
        }
      },
      {
        "name": "[variables('subnetApplication')]",
        "properties": {
          "addressPrefix": "[variables('subnetRangeApplication')]"
        }
      },
      {
        "name": "[variables('subnetData')]",
        "properties": {
          "addressPrefix": "[variables('subnetRangeData')]"
        }
      },
      {
        "name": "[variables('subnetManagement')]",
        "properties": {
          "addressPrefix": "[variables('subnetRangeManagement')]"
        }
      }
    ],
    "virtualNetworkAddressRange": "10.0.0.0/16",
    "virtualNetworkName": "[concat(variables('namePrefix'),'vnet')]",
    "vNetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "vnetwithDNSTemplateUri": "[concat(parameters('assetLocation'),'/vnet-with-dns-server.json')]",
    "webAvailabilitySetName": "[concat(variables('namePrefix'),'web')]",
    "webVMCount": 2,
    "webVMNamePrefix": "WEB",
    "webVMSize": "Standard_DS2",
    "windowsImageOffer": "WindowsServer",
    "windowsImagePublisher": "MicrosoftWindowsServer",
    "windowsImageSKU": "2012-R2-Datacenter"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('namePrefix'), copyindex())]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "copy": {
        "name": "storageAccountLoop",
        "count": 6
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pipName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('ExternalDnsPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('adsAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('sqlAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "properties": {
        "platformFaultDomainCount": "3",
        "platformUpdateDomainCount": "3"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('rdsAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('rgwAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('webAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]"
    },
    {
      "name": "[variables('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[variables('location')]",
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('virtualNetworkAddressRange')]"
          ]
        },
        "subnets": "[variables('subnets')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('elbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('pipName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('pipID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"

          },
          {
            "name": "BackendPool2"

          },
          {
            "name": "BackendPool3"

          }
        ],
        "inboundNatRules": [
          {
            "name": "RDP0",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('elbFrontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 50001,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "RDP1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('elbFrontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 50002,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('elbFrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('elbBackendPool1ID')]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIP",
              "probe": {
                "id": "[variables('elbProbe1ID')]"
              }
            }
          },
          {
            "name": "LBRule2",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('elbFrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('elbBackendPool1ID')]"
              },
              "protocol": "udp",
              "frontendPort": 3391,
              "backendPort": 3391,
              "enableFloatingIP": false,
              "loadDistribution": "SourceIP",
              "probe": {
                "id": "[variables('elbProbe1ID')]"
              }
            }
          },
          {
            "name": "LBRule3",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('elbFrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('elbBackendPool3ID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "loadDistribution": "Default",
              "probe": {
                "id": "[variables('elbProbe3ID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe1",
            "properties": {
              "protocol": "tcp",
              "port": 443,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpProbe2",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "httpProbe1",
            "properties": {
              "protocol": "Http",
              "port": 80,
              "requestPath": "/",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('ilbName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [ "[variables('vnetID')]" ],
      "properties": {
        "frontendIpConfigurations": [
          {

            "properties": {
              "subnet": {
                "Id": "[variables('subnetDataRef')]"
              },
              "privateIPAddress": "[variables('ilbIPAddress')]",
              "privateIPAllocationMethod": "Static"
            },
            "name": "ilbFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "sqlBackendPool"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/frontendIpConfigurations/ilbFrontend')]"
              },
              "backendAddressPool": {
                "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/backendAddressPools/sqlBackendPool')]"
              },
              "probe": {
                "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/probes/sqlProbe')]"
              },
              "protocol": "tcp",
              "frontendPort": 1433,
              "backendPort": 1433,
              "enableFloatingIP": true

            },
            "Name": "sqlListener"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "tcp",
              "port": 59999,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            },
            "name": "sqlProbe"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('adsVMNamePrefix'), '1-nic')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/',variables('elbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('adPDCNicIPAddress')]",
              "subnet": {
                "id": "[variables('subnetManagementRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('elbID'), '/backendAddressPools/BackendPool2')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('elbID'),'/inboundNatRules/RDP0')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('adsVMNamePrefix'), '2-nic')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/',variables('elbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('adBDCNicIPAddress')]",
              "subnet": {
                "id": "[variables('subnetManagementRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('elbID'), '/backendAddressPools/BackendPool2')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('elbID'),'/inboundNatRules/RDP1')]"
                }
              ]
            }
          }
        ]

      }
    },
    {
      "name": "[concat(variables('sqlVMNamePrefix'), '1-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/',variables('ilbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetDataRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('ilbID'), '/backendAddressPools/sqlBackendPool')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('sqlVMNamePrefix'), '2-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/',variables('ilbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetDataRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('ilbID'), '/backendAddressPools/sqlBackendPool')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('sqlVMNamePrefix'), 'W-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetDataRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('rdsVMNamePrefix'), copyindex(),'-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-05-01-preview",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('rdsVMCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetApplicationRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('rdgVMNamePrefix'), copyindex(),'-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-05-01-preview",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('rdgVMCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('elbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetApplicationRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('elbID'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('webVMNamePrefix'), copyindex(),'-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-05-01-preview",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('webVMCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('elbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetFrontRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('elbID'), '/backendAddressPools/BackendPool3')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('adsVMNamePrefix'),'1')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',concat(variables('namePrefix'), '0'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('adsVMNamePrefix'), '1-nic'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adsAvailabilitySetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers',variables('elbName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('adsVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adsAvailabilitySetName'))]"
        },
        "osProfile": {
          "computername": "[concat(variables('adsVMNamePrefix'), '1')]",
          "AdminUserName": "[parameters('AdminUserName')]",
          "AdminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('windowsImagePublisher')]",
            "offer": "[variables('windowsImageOffer')]",
            "sku": "[variables('windowsImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('namePrefix'),'0.blob.core.windows.net/vhds/',variables('adsVMNamePrefix'),'1-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',variables('namePrefix'),'0.blob.core.windows.net/vhds/', variables('adsVMNamePrefix'), '1-data-0.vhd')]"
              },
              "name": "[concat(variables('adsVMNamePrefix'),'1-data-disk0')]",
              "createOption": "empty",
              "caching": "None",
              "diskSizeGB": "[variables('_vmDiskSize')]",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('adsVMNamePrefix'), '1-nic'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('adsVMNamePrefix'),'1/InstallDomainController')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('adsVMNamePrefix'),'1'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "1.7",
            "settings": {
              "modulesUrl": "[variables('adPDCModulesURL')]",
              "configurationFunction": "[variables('adPDCConfigurationFunction')]",
              "properties": {
                "domainName": "[parameters('domainDNS')]",
                "adminCreds": {
                  "userName": "[parameters('AdminUserName')]",
                  "password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "items": {
                "AdminPassword": "[parameters('AdminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "name": "UpdateVNetDNS1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('adsVMNamePrefix'),'1/extensions/InstallDomainController')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[variables('location')]" },
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "virtualNetworkAddressRange": { "value": "[variables('virtualNetworkAddressRange')]" },
          "subnets": { "value": "[variables('subnets')]" },
          "dnsServerAddress": { "value": [ "[variables('adPDCNicIPAddress')]" ] }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('adsVMNamePrefix'), '2')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',concat(variables('namePrefix'), '1'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('adsVMNamePrefix'), '2-nic'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adsAvailabilitySetName'))]",
        "Microsoft.Resources/deployments/UpdateVNetDNS1"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('adsVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adsAvailabilitySetName'))]"
        },
        "osProfile": {
          "computername": "[concat(variables('adsVMNamePrefix'), '2')]",
          "AdminUserName": "[parameters('AdminUserName')]",
          "AdminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('windowsImagePublisher')]",
            "offer": "[variables('windowsImageOffer')]",
            "sku": "[variables('windowsImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('namePrefix'),'1.blob.core.windows.net/vhds/',variables('adsVMNamePrefix'),'2-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',variables('namePrefix'),'1.blob.core.windows.net/vhds/', variables('adsVMNamePrefix'),'2-data-0.vhd')]"
              },
              "name": "[concat(variables('adsVMNamePrefix'),'2-data-disk1')]",
              "createOption": "empty",
              "caching": "None",
              "diskSizeGB": "[variables('_vmDiskSize')]",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('adsVMNamePrefix'), '2-nic'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('adsVMNamePrefix'),'2/CreateBDC')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[variables('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('adsVMNamePrefix'), '2')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "1.7",
            "settings": {
              "modulesUrl": "[variables('adBDCModulesURL')]",
              "configurationFunction": "[variables('adBDCConfigurationFunction')]",
              "properties": {
                "domainName": "[parameters('domainDNS')]",
                "adminCreds": {
                  "userName": "[parameters('AdminUserName')]",
                  "password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "items": {
                "AdminPassword": "[parameters('AdminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "name": "UpdateVNetDNS2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',variables('adsVMNamePrefix'),'2/extensions/CreateBDC')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[variables('location')]" },
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "virtualNetworkAddressRange": { "value": "[variables('virtualNetworkAddressRange')]" },
          "subnets": { "value": "[variables('subnets')]" },
          "dnsServerAddress": { "value": [ "[variables('adPDCNicIPAddress')]", "[variables('adBDCNicIPAddress')]" ] }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('sqlVMNamePrefix'), '1')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',concat(variables('namePrefix'), '2'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlVMNamePrefix'), '1-nic'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]",
        "Microsoft.Resources/deployments/UpdateVNetDNS2"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('sqlVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
        },
        "osProfile": {
          "computername": "[concat(variables('sqlVMNamePrefix'), '1')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('sqlImagePublisher')]",
            "offer": "[variables('sqlImageOffer')]",
            "sku": "[variables('sqlImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('sqlVMNamePrefix'), '2-osdisk')]",
            "vhd": {
              "uri": "[concat('http://',variables('namePrefix'),'2.blob.core.windows.net/vhds/',variables('sqlVMNamePrefix'), '1-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',variables('namePrefix'),'2.blob.core.windows.net/vhds/', variables('sqlVMNamePrefix'), '1-Data.vhd')]"
              },
              "name": "[concat(variables('sqlVMNamePrefix'), '1-data')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('sqlDiskSize')]",
              "lun": 0
            },
            {
              "vhd": {
                "uri": "[concat('http://',variables('namePrefix'), '2.blob.core.windows.net/vhds/', variables('sqlVMNamePrefix'), '1-log.vhd')]"
              },
              "name": "[concat(variables('namePrefix'),'1-log')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('sqlDiskSize')]",
              "lun": 1
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlVMNamePrefix'), '1-nic'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('sqlVMNamePrefix'), '2')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',concat(variables('namePrefix'), '3'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlVMNamePrefix'), '2-nic'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]",
        "Microsoft.Resources/deployments/UpdateVNetDNS2"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('sqlVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
        },
        "osProfile": {
          "computername": "[concat(variables('sqlVMNamePrefix'), '2')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('sqlImagePublisher')]",
            "offer": "[variables('sqlImageOffer')]",
            "sku": "[variables('sqlImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('sqlVMNamePrefix'), '2-osdisk')]",
            "vhd": {
              "uri": "[concat('http://',variables('namePrefix'),'3.blob.core.windows.net/vhds/',variables('sqlVMNamePrefix'), '2-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',variables('namePrefix'),'3.blob.core.windows.net/vhds/', variables('sqlVMNamePrefix'), '2-Data.vhd')]"
              },
              "name": "[concat(variables('sqlVMNamePrefix'), '2-data')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('sqlDiskSize')]",
              "lun": 0
            },
            {
              "vhd": {
                "uri": "[concat('http://',variables('namePrefix'), '3.blob.core.windows.net/vhds/', variables('sqlVMNamePrefix'), '2-log.vhd')]"
              },
              "name": "[concat(variables('namePrefix'),'2-log')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('sqlDiskSize')]",
              "lun": 1
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlVMNamePrefix'), '2-nic'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('sqlVMNamePrefix'), 'W')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',concat(variables('namePrefix'), '0'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('sqlVMNamePrefix'), 'W-nic'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]",
        "Microsoft.Resources/deployments/UpdateVNetDNS2"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('witnessVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
        },
        "osProfile": {
          "computername": "[concat(variables('sqlVMNamePrefix'), 'W')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('windowsImagePublisher')]",
            "offer": "[variables('windowsImageOffer')]",
            "sku": "[variables('windowsImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('namePrefix'),'0.blob.core.windows.net/vhds/',variables('sqlVMNamePrefix'),'W-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',variables('namePrefix'),'0.blob.core.windows.net/vhds/', variables('sqlVMNamePrefix'),'W-data.vhd')]"
              },
              "name": "[concat(variables('sqlVMNamePrefix'),'W-data')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('_vmDiskSize')]",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('sqlVMNamePrefix'), 'W-nic'))]"
            }
          ]
        }
      },
      "resources": [
        {
			    "type": "Microsoft.Compute/virtualMachines/extensions",
			    "name": "[concat(variables('sqlVMNamePrefix'),'W/CreateFileShareWitness')]",
			    "apiVersion": "2015-05-01-preview",
			    "location": "[variables('location')]",
			    "dependsOn":[
				    "[concat('Microsoft.Compute/virtualMachines/', variables('sqlVMNamePrefix'), 'W')]"
			    ],
			    "properties": {
				    "publisher": "Microsoft.Powershell",
				    "type": "DSC",
				    "typeHandlerVersion": "1.7",
				    "settings": {
					    "modulesUrl": "[variables('fswModulesURL')]",
					    "configurationFunction": "[variables('fswConfigurationFunction')]",
					    "properties": {
						    "domainName": "[parameters('domainDNS')]",
						    "sharePath":"[variables('sharePath')]",
						    "adminCreds":{
							    "userName": "[parameters('adminUserName')]",
							    "password": "PrivateSettingsRef:adminPassword"
						    }

					    }
				    },
				    "protectedSettings": {
					    "items": {
						    "adminPassword": "[parameters('adminPassword')]"
					    }
				    }
			    }
		    }
      ]
    }

  ],
  "outputs": {
    "AdminUserName": {
      "value": "[parameters('AdminUserName')]",
      "type": "string"
    },
    "AdminPassword": {
			"value": "[parameters('AdminPassword')]",
			"type" : "string"
		}
  }
}
